// Code generated by entc, DO NOT EDIT.

package paymenttoken

const (
	// Label holds the string label denoting the paymenttoken type in the database.
	Label = "payment_token"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldSymbol holds the string denoting the symbol field in the database.
	FieldSymbol = "symbol"
	// FieldPrice holds the string denoting the price field in the database.
	FieldPrice = "price"
	// EdgeAsset holds the string denoting the asset edge name in mutations.
	EdgeAsset = "asset"
	// Table holds the table name of the paymenttoken in the database.
	Table = "payment_tokens"
	// AssetTable is the table that holds the asset relation/edge. The primary key declared below.
	AssetTable = "asset_paymentToken"
	// AssetInverseTable is the table name for the Asset entity.
	// It exists in this package in order to avoid circular dependency with the "asset" package.
	AssetInverseTable = "assets"
)

// Columns holds all SQL columns for paymenttoken fields.
var Columns = []string{
	FieldID,
	FieldAddress,
	FieldType,
	FieldSymbol,
	FieldPrice,
}

var (
	// AssetPrimaryKey and AssetColumn2 are the table columns denoting the
	// primary key for the asset relation (M2M).
	AssetPrimaryKey = []string{"asset_id", "payment_token_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}
