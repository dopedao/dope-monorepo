// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
)

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (bp *BodyPartQuery) CollectFields(ctx context.Context, satisfies ...string) *BodyPartQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		bp = bp.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return bp
}

func (bp *BodyPartQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *BodyPartQuery {
	return bp
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (d *DopeQuery) CollectFields(ctx context.Context, satisfies ...string) *DopeQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		d = d.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return d
}

func (d *DopeQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *DopeQuery {
	return d
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (h *HustlerQuery) CollectFields(ctx context.Context, satisfies ...string) *HustlerQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		h = h.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return h
}

func (h *HustlerQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *HustlerQuery {
	return h
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (i *ItemQuery) CollectFields(ctx context.Context, satisfies ...string) *ItemQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		i = i.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return i
}

func (i *ItemQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *ItemQuery {
	return i
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (ss *SyncStateQuery) CollectFields(ctx context.Context, satisfies ...string) *SyncStateQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		ss = ss.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return ss
}

func (ss *SyncStateQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *SyncStateQuery {
	return ss
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (w *WalletQuery) CollectFields(ctx context.Context, satisfies ...string) *WalletQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		w = w.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return w
}

func (w *WalletQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *WalletQuery {
	return w
}

// CollectFields tells the query-builder to eagerly load connected nodes by resolver context.
func (wi *WalletItemsQuery) CollectFields(ctx context.Context, satisfies ...string) *WalletItemsQuery {
	if fc := graphql.GetFieldContext(ctx); fc != nil {
		wi = wi.collectField(graphql.GetOperationContext(ctx), fc.Field, satisfies...)
	}
	return wi
}

func (wi *WalletItemsQuery) collectField(ctx *graphql.OperationContext, field graphql.CollectedField, satisfies ...string) *WalletItemsQuery {
	return wi
}
