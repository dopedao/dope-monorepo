// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"github.com/dopedao/dope-monorepo/packages/api/ent"
)

// PaymentTokenWhereInput is used for filtering PaymentToken objects.
// Input was generated by ent.
type PaymentTokenWhereInput struct {
	Not *PaymentTokenWhereInput   `json:"not"`
	And []*PaymentTokenWhereInput `json:"and"`
	Or  []*PaymentTokenWhereInput `json:"or"`
	// address field predicates
	Address             *string  `json:"address"`
	AddressNeq          *string  `json:"addressNEQ"`
	AddressIn           []string `json:"addressIn"`
	AddressNotIn        []string `json:"addressNotIn"`
	AddressGt           *string  `json:"addressGT"`
	AddressGte          *string  `json:"addressGTE"`
	AddressLt           *string  `json:"addressLT"`
	AddressLte          *string  `json:"addressLTE"`
	AddressContains     *string  `json:"addressContains"`
	AddressHasPrefix    *string  `json:"addressHasPrefix"`
	AddressHasSuffix    *string  `json:"addressHasSuffix"`
	AddressEqualFold    *string  `json:"addressEqualFold"`
	AddressContainsFold *string  `json:"addressContainsFold"`
	// type field predicates
	Type             *string  `json:"type"`
	TypeNeq          *string  `json:"typeNEQ"`
	TypeIn           []string `json:"typeIn"`
	TypeNotIn        []string `json:"typeNotIn"`
	TypeGt           *string  `json:"typeGT"`
	TypeGte          *string  `json:"typeGTE"`
	TypeLt           *string  `json:"typeLT"`
	TypeLte          *string  `json:"typeLTE"`
	TypeContains     *string  `json:"typeContains"`
	TypeHasPrefix    *string  `json:"typeHasPrefix"`
	TypeHasSuffix    *string  `json:"typeHasSuffix"`
	TypeEqualFold    *string  `json:"typeEqualFold"`
	TypeContainsFold *string  `json:"typeContainsFold"`
	// symbol field predicates
	Symbol             *string  `json:"symbol"`
	SymbolNeq          *string  `json:"symbolNEQ"`
	SymbolIn           []string `json:"symbolIn"`
	SymbolNotIn        []string `json:"symbolNotIn"`
	SymbolGt           *string  `json:"symbolGT"`
	SymbolGte          *string  `json:"symbolGTE"`
	SymbolLt           *string  `json:"symbolLT"`
	SymbolLte          *string  `json:"symbolLTE"`
	SymbolContains     *string  `json:"symbolContains"`
	SymbolHasPrefix    *string  `json:"symbolHasPrefix"`
	SymbolHasSuffix    *string  `json:"symbolHasSuffix"`
	SymbolEqualFold    *string  `json:"symbolEqualFold"`
	SymbolContainsFold *string  `json:"symbolContainsFold"`
	// price field predicates
	Price      *float64  `json:"price"`
	PriceNeq   *float64  `json:"priceNEQ"`
	PriceIn    []float64 `json:"priceIn"`
	PriceNotIn []float64 `json:"priceNotIn"`
	PriceGt    *float64  `json:"priceGT"`
	PriceGte   *float64  `json:"priceGTE"`
	PriceLt    *float64  `json:"priceLT"`
	PriceLte   *float64  `json:"priceLTE"`
	// id field predicates
	ID      *string  `json:"id"`
	IDNeq   *string  `json:"idNEQ"`
	IDIn    []string `json:"idIn"`
	IDNotIn []string `json:"idNotIn"`
	IDGt    *string  `json:"idGT"`
	IDGte   *string  `json:"idGTE"`
	IDLt    *string  `json:"idLT"`
	IDLte   *string  `json:"idLTE"`
	// asset edge predicates
	HasAsset     *bool                  `json:"hasAsset"`
	HasAssetWith []*ent.AssetWhereInput `json:"hasAssetWith"`
}
